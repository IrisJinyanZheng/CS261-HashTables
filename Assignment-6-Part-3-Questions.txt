Assignment 6 Part 3 Questions
1. Two words that would hash to the same value using hashFunction1 but not hashFunction2 are: ate and eat. For example, when you run the program from part 2 on the set of three words (ate, eat, and tea), they hash to the same bucket using hashFunction1 and not hashfunction2. 
2. The above observation makes hashFunction2 superior to hash function one because the Big-Oh complexity of running the program is closer to O(1) (constant time complexity) with hashFunction2 than hashFunction1. This is because with hashFunction2 one is more likely to match their key/value pair on the first attempt with hashFunction2 because they have to iterate through less links in each bucket. 
3. No, the hashMapSize function will not return different values because regardless of the hashFunction used, we are creating the same amount of total links. The only difference between each hash function is the overall number of elements assigned per bucket. For example, hashFunction1 may fill 2 buckets with 5 links each for size = 10 but hashFunction2 may fill 5 buckets with 2 links each for size = 10. Although the size is the same, we know that each function hashed the links differently. 
4. No, the hashMapTableLoad function will not return different values regardless of the hashFunction used. As explained in 3), the hashMapSize value will not change with either hash function. Likewise, the number of buckets will not change between either hash function. Since neither the size or capacity of the table will change with either hash function (since the size/capacity are not dependent on those functions) the ratio of these two values (ie. hashMapTableLoad) will not return a different value. 
5. Yes, it is possible for the HashMapEmptyBuckets function to return different values for different hashFunctions. This is because different hash Functions are better at dispersing the links (ie. Hashing into empty buckets) than other hash Functions. Hashfunction1, for example, fills one bucket with the three words eat, ate, and tea; whereas hashfunction2 fills three buckets (each with one word). This means that hashfunction1 results in more empty buckets than hashfunction2, ie. their HashMapEmptyBuckets functions have different values. 
6. Yes there is a difference in the number of empty buckets when you change the table size from an even number like 1000 to a prime like 997. A prime number is better able to distribute the data (links) among the different hash buckets. And since the links are better distributed with prime numbers, the operational complexity of table with prime-n buckets will be closer to O(1). 
